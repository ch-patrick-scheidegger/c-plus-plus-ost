# CMAKE generated file: DO NOT EDIT!
# Generated by CMake Version 3.26
cmake_policy(SET CMP0009 NEW)

# CPL_WEEKS at CMakeLists.txt:26 (file)
file(GLOB NEW_GLOB LIST_DIRECTORIES true RELATIVE "C:/Users/Pat/CLionProjects/cpl" "C:/Users/Pat/CLionProjects/cpl/week*/CMakeLists.txt")
set(OLD_GLOB
  "week01/CMakeLists.txt"
  "week02/CMakeLists.txt"
  "week03/CMakeLists.txt"
  "week04/CMakeLists.txt"
  "week05/CMakeLists.txt"
  "week06/CMakeLists.txt"
  "week07/CMakeLists.txt"
  "week08/CMakeLists.txt"
  "week09/CMakeLists.txt"
  "week10/CMakeLists.txt"
  "week11/CMakeLists.txt"
  "week12/CMakeLists.txt"
  "week13/CMakeLists.txt"
  )
if(NOT "${NEW_GLOB}" STREQUAL "${OLD_GLOB}")
  message("-- GLOB mismatch!")
  file(TOUCH_NOCREATE "C:/Users/Pat/CLionProjects/cpl/cmake-build-debug/CMakeFiles/cmake.verify_globs")
endif()

# CUTE_HEADERS at lib/CMakeLists.txt:4 (file)
file(GLOB_RECURSE NEW_GLOB LIST_DIRECTORIES false RELATIVE "C:/Users/Pat/CLionProjects/cpl/lib" "C:/Users/Pat/CLionProjects/cpl/lib/*.h")
set(OLD_GLOB
  "CUTE/cute/counting_listener.h"
  "CUTE/cute/cute.h"
  "CUTE/cute/cute_base.h"
  "CUTE/cute/cute_data_driven.h"
  "CUTE/cute/cute_demangle.h"
  "CUTE/cute/cute_deprecated.h"
  "CUTE/cute/cute_determine_library.h"
  "CUTE/cute/cute_determine_traits.h"
  "CUTE/cute/cute_determine_version.h"
  "CUTE/cute/cute_diff_values.h"
  "CUTE/cute/cute_equals.h"
  "CUTE/cute/cute_integer_sequence.h"
  "CUTE/cute/cute_listener.h"
  "CUTE/cute/cute_range.h"
  "CUTE/cute/cute_relops.h"
  "CUTE/cute/cute_repeated_test.h"
  "CUTE/cute/cute_runner.h"
  "CUTE/cute/cute_suite.h"
  "CUTE/cute/cute_suite_test.h"
  "CUTE/cute/cute_test.h"
  "CUTE/cute/cute_test_incarnate.h"
  "CUTE/cute/cute_testmember.h"
  "CUTE/cute/cute_throws.h"
  "CUTE/cute/cute_to_string.h"
  "CUTE/cute/cute_version.h"
  "CUTE/cute/cute_xml_file.h"
  "CUTE/cute/ide_listener.h"
  "CUTE/cute/ostream_listener.h"
  "CUTE/cute/summary_listener.h"
  "CUTE/cute/tap_listener.h"
  "CUTE/cute/xml_listener.h"
  "boost/boost/container/detail/alloc_lib.h"
  "boost/boost/outcome/experimental/result.h"
  "boost/boost/predef.h"
  "boost/boost/predef/architecture.h"
  "boost/boost/predef/architecture/alpha.h"
  "boost/boost/predef/architecture/arm.h"
  "boost/boost/predef/architecture/blackfin.h"
  "boost/boost/predef/architecture/convex.h"
  "boost/boost/predef/architecture/e2k.h"
  "boost/boost/predef/architecture/ia64.h"
  "boost/boost/predef/architecture/loongarch.h"
  "boost/boost/predef/architecture/m68k.h"
  "boost/boost/predef/architecture/mips.h"
  "boost/boost/predef/architecture/parisc.h"
  "boost/boost/predef/architecture/ppc.h"
  "boost/boost/predef/architecture/ptx.h"
  "boost/boost/predef/architecture/pyramid.h"
  "boost/boost/predef/architecture/riscv.h"
  "boost/boost/predef/architecture/rs6k.h"
  "boost/boost/predef/architecture/sparc.h"
  "boost/boost/predef/architecture/superh.h"
  "boost/boost/predef/architecture/sys370.h"
  "boost/boost/predef/architecture/sys390.h"
  "boost/boost/predef/architecture/x86.h"
  "boost/boost/predef/architecture/x86/32.h"
  "boost/boost/predef/architecture/x86/64.h"
  "boost/boost/predef/architecture/z.h"
  "boost/boost/predef/compiler.h"
  "boost/boost/predef/compiler/borland.h"
  "boost/boost/predef/compiler/clang.h"
  "boost/boost/predef/compiler/comeau.h"
  "boost/boost/predef/compiler/compaq.h"
  "boost/boost/predef/compiler/diab.h"
  "boost/boost/predef/compiler/digitalmars.h"
  "boost/boost/predef/compiler/dignus.h"
  "boost/boost/predef/compiler/edg.h"
  "boost/boost/predef/compiler/ekopath.h"
  "boost/boost/predef/compiler/gcc.h"
  "boost/boost/predef/compiler/gcc_xml.h"
  "boost/boost/predef/compiler/greenhills.h"
  "boost/boost/predef/compiler/hp_acc.h"
  "boost/boost/predef/compiler/iar.h"
  "boost/boost/predef/compiler/ibm.h"
  "boost/boost/predef/compiler/intel.h"
  "boost/boost/predef/compiler/kai.h"
  "boost/boost/predef/compiler/llvm.h"
  "boost/boost/predef/compiler/metaware.h"
  "boost/boost/predef/compiler/metrowerks.h"
  "boost/boost/predef/compiler/microtec.h"
  "boost/boost/predef/compiler/mpw.h"
  "boost/boost/predef/compiler/nvcc.h"
  "boost/boost/predef/compiler/palm.h"
  "boost/boost/predef/compiler/pgi.h"
  "boost/boost/predef/compiler/sgi_mipspro.h"
  "boost/boost/predef/compiler/sunpro.h"
  "boost/boost/predef/compiler/tendra.h"
  "boost/boost/predef/compiler/visualc.h"
  "boost/boost/predef/compiler/watcom.h"
  "boost/boost/predef/detail/_cassert.h"
  "boost/boost/predef/detail/_exception.h"
  "boost/boost/predef/detail/comp_detected.h"
  "boost/boost/predef/detail/os_detected.h"
  "boost/boost/predef/detail/platform_detected.h"
  "boost/boost/predef/detail/test.h"
  "boost/boost/predef/detail/test_def.h"
  "boost/boost/predef/hardware.h"
  "boost/boost/predef/hardware/simd.h"
  "boost/boost/predef/hardware/simd/arm.h"
  "boost/boost/predef/hardware/simd/arm/versions.h"
  "boost/boost/predef/hardware/simd/ppc.h"
  "boost/boost/predef/hardware/simd/ppc/versions.h"
  "boost/boost/predef/hardware/simd/x86.h"
  "boost/boost/predef/hardware/simd/x86/versions.h"
  "boost/boost/predef/hardware/simd/x86_amd.h"
  "boost/boost/predef/hardware/simd/x86_amd/versions.h"
  "boost/boost/predef/language.h"
  "boost/boost/predef/language/cuda.h"
  "boost/boost/predef/language/objc.h"
  "boost/boost/predef/language/stdc.h"
  "boost/boost/predef/language/stdcpp.h"
  "boost/boost/predef/library.h"
  "boost/boost/predef/library/c.h"
  "boost/boost/predef/library/c/_prefix.h"
  "boost/boost/predef/library/c/cloudabi.h"
  "boost/boost/predef/library/c/gnu.h"
  "boost/boost/predef/library/c/uc.h"
  "boost/boost/predef/library/c/vms.h"
  "boost/boost/predef/library/c/zos.h"
  "boost/boost/predef/library/std.h"
  "boost/boost/predef/library/std/_prefix.h"
  "boost/boost/predef/library/std/cxx.h"
  "boost/boost/predef/library/std/dinkumware.h"
  "boost/boost/predef/library/std/libcomo.h"
  "boost/boost/predef/library/std/modena.h"
  "boost/boost/predef/library/std/msl.h"
  "boost/boost/predef/library/std/roguewave.h"
  "boost/boost/predef/library/std/sgi.h"
  "boost/boost/predef/library/std/stdcpp3.h"
  "boost/boost/predef/library/std/stlport.h"
  "boost/boost/predef/library/std/vacpp.h"
  "boost/boost/predef/make.h"
  "boost/boost/predef/os.h"
  "boost/boost/predef/os/aix.h"
  "boost/boost/predef/os/amigaos.h"
  "boost/boost/predef/os/beos.h"
  "boost/boost/predef/os/bsd.h"
  "boost/boost/predef/os/bsd/bsdi.h"
  "boost/boost/predef/os/bsd/dragonfly.h"
  "boost/boost/predef/os/bsd/free.h"
  "boost/boost/predef/os/bsd/net.h"
  "boost/boost/predef/os/bsd/open.h"
  "boost/boost/predef/os/cygwin.h"
  "boost/boost/predef/os/haiku.h"
  "boost/boost/predef/os/hpux.h"
  "boost/boost/predef/os/ios.h"
  "boost/boost/predef/os/irix.h"
  "boost/boost/predef/os/linux.h"
  "boost/boost/predef/os/macos.h"
  "boost/boost/predef/os/os400.h"
  "boost/boost/predef/os/qnxnto.h"
  "boost/boost/predef/os/solaris.h"
  "boost/boost/predef/os/unix.h"
  "boost/boost/predef/os/vms.h"
  "boost/boost/predef/os/windows.h"
  "boost/boost/predef/other.h"
  "boost/boost/predef/other/endian.h"
  "boost/boost/predef/other/wordsize.h"
  "boost/boost/predef/other/workaround.h"
  "boost/boost/predef/platform.h"
  "boost/boost/predef/platform/android.h"
  "boost/boost/predef/platform/cloudabi.h"
  "boost/boost/predef/platform/ios.h"
  "boost/boost/predef/platform/mingw.h"
  "boost/boost/predef/platform/mingw32.h"
  "boost/boost/predef/platform/mingw64.h"
  "boost/boost/predef/platform/windows_desktop.h"
  "boost/boost/predef/platform/windows_phone.h"
  "boost/boost/predef/platform/windows_runtime.h"
  "boost/boost/predef/platform/windows_server.h"
  "boost/boost/predef/platform/windows_store.h"
  "boost/boost/predef/platform/windows_system.h"
  "boost/boost/predef/platform/windows_uwp.h"
  "boost/boost/predef/version.h"
  "boost/boost/predef/version_number.h"
  "boost/boost/python/detail/python22_fixed.h"
  "boost/boost/regex.h"
  "boost/boost/stacktrace/detail/pop_options.h"
  "boost/boost/stacktrace/detail/push_options.h"
  )
if(NOT "${NEW_GLOB}" STREQUAL "${OLD_GLOB}")
  message("-- GLOB mismatch!")
  file(TOUCH_NOCREATE "C:/Users/Pat/CLionProjects/cpl/cmake-build-debug/CMakeFiles/cmake.verify_globs")
endif()
